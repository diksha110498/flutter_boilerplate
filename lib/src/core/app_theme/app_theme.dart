import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter_boilerplate/src/core/app_theme/app_colors.dart';import 'package:flutter_boilerplate/src/core/app_utils/app_sizes.dart';import '../app_utils/app_font_style.dart';class AppTheme {  static ThemeData lightTheme = ThemeData(    primaryColor: AppColors.primaryColor,    cupertinoOverrideTheme: CupertinoThemeData(        primaryColor: AppColors.primaryColor,        applyThemeToAll: true,        primaryContrastingColor: AppColors.scaffoldBackgroundColor,        scaffoldBackgroundColor: AppColors.scaffoldBackgroundColor,        barBackgroundColor: AppColors.scaffoldBackgroundColor,        textTheme: CupertinoTextThemeData(          pickerTextStyle: TextStyle(              fontFamily: 'Poppins',              color: AppColors.primaryColor,              fontWeight: FontWeight.w700,              fontSize: AppSizes.titleMeidumSize),          primaryColor: AppColors.primaryColor,          dateTimePickerTextStyle: TextStyle(              fontFamily: 'Poppins',              fontWeight: FontWeight.w500,              color: AppColors.primaryColor,              fontSize: AppSizes.bodyLargeSize),        )),    colorScheme: ColorScheme.fromSeed(      seedColor: CupertinoColors.activeBlue,      surface: const Color(0xF0F9F9F9),      onSurface: CupertinoColors.label,      primary: AppColors.primaryColor,      onBackground: CupertinoColors.label,      background: const Color(0xF0F9F9F9),      brightness: Brightness.light,    ),    splashColor: Colors.transparent,    splashFactory: NoSplash.splashFactory,    scaffoldBackgroundColor: AppColors.scaffoldBackgroundColor,    appBarTheme: const AppBarTheme(      surfaceTintColor: Colors.transparent,      color: Colors.blue,      iconTheme: IconThemeData(color: Colors.white),    ),    textTheme: TextTheme(      titleLarge: TextStyle(          fontFamily: 'Poppins',          fontWeight: FontWeight.w700,          fontSize: AppSizes.titleLargeSize),      titleMedium: TextStyle(          fontFamily: 'Poppins',          fontWeight: FontWeight.w700,          fontSize: AppSizes.titleMeidumSize),      titleSmall: TextStyle(          fontFamily: 'Poppins',          fontWeight: FontWeight.w700,          fontSize: AppSizes.titleSmallSize),      bodyLarge: TextStyle(          fontFamily: 'Poppins',          fontWeight: FontWeight.w500,          fontSize: AppSizes.bodyLargeSize),      bodyMedium: TextStyle(          fontFamily: 'Poppins',          fontWeight: FontWeight.w500,          fontSize: AppSizes.bodyMediumSize),      bodySmall: TextStyle(          fontFamily: 'Poppins',          fontWeight: FontWeight.w500,          fontSize: AppSizes.bodySmallSize),      labelLarge: TextStyle(          fontFamily: 'Poppins',          fontWeight: FontWeight.w600,          color: Colors.white,          fontSize: AppSizes.buttonTextSize),    ),    inputDecorationTheme: InputDecorationTheme(      hintStyle: TextStyle(          fontFamily: 'Poppins',          fontWeight: FontWeight.w500,          color: AppColors.textHeadingColor,          fontSize: AppSizes.bodySmallSize),      labelStyle: TextStyle(          fontFamily: 'Poppins',          fontWeight: FontWeight.w500,          color: AppColors.inputTextColor,          fontSize: AppSizes.bodySmallSize),    ),    buttonTheme: ButtonThemeData(        height: AppSizes.buttonHeightSize,        minWidth: AppSizes.minButtonWidthSize,        textTheme: ButtonTextTheme.normal,        buttonColor: AppColors.buttonColor,        padding: EdgeInsets.symmetric(vertical: AppSizes.smallPadding),        shape: RoundedRectangleBorder(          borderRadius: BorderRadius.circular(AppSizes.smallRoundedRadius),        )),  );  // You can add more themes, such as darkTheme, if needed.  // Method to apply the theme to a MaterialApp  static ThemeData getAppTheme({bool isDarkMode = false}) {    return lightTheme;  }}